/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import controladores.Controlador_Campeonato;
import controladores.Controlador_Corrida;
import controladores.Controlador_TelaCorrida;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import java_projeto.Campeonato;
import java_projeto.Carro;
import java_projeto.Corrida;
import java_projeto.Equipe;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;

/**
 *
 * @author Matheus
 */
public class Principal extends javax.swing.JFrame {

    private Campeonato c;
    private ArrayList<String[]> tabela = new ArrayList<>();

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
        c = Controlador_Campeonato.criarCampeonato("Grande Prêmio das Lolis");
        Controlador_Campeonato.iniciaCampeonato(c);

        tabela = Controlador_TelaCorrida.getTabelaCorrida(c);
        jTable1.setModel(new CorridaTableModel(tabela));
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.getModel().addTableModelListener(new TableModelListener() {
            public void tableChanged(TableModelEvent e) {
                System.out.println(e);
            }
        });

    }

    public enum Delays {
        TROCA_CORRIDA(3), TEMPO_CORRER(100);
        public final long v;

        private Delays(long v) {
            this.v = v;
        }

        public long getV() {
            return v;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        tituloCorrida = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Posição", null, null, null, null, null, null, null, null, null, null},
                {"Estado", null, null, null, null, null, null, null, null, null, null},
                {"Equipe", null, null, null, null, null, null, null, null, null, null},
                {"Combustível", null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "", "Carro 1", "Carro 2", "Carro 3", "Carro 4", "Carro 5", "Carro 6", "Carro 7", "Carro 8", "Carro 9", "Carro 10"
            }
        ));
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(2).setResizable(false);
        }

        jButton1.setText("Run");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        tituloCorrida.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        tituloCorrida.setText("Corrida N°: 10");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setText("Tempo: Ensolarado");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(tituloCorrida, javax.swing.GroupLayout.PREFERRED_SIZE, 477, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(99, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tituloCorrida, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(19, 19, 19)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws InterruptedException {
        Principal p = new Principal();
        p.setVisible(true);

        int num = 1;
        for (Corrida corrida : p.c.getCorridas()) {
            boolean corrida_terminou = false;
            Controlador_TelaCorrida.setTituloCorrida(num++, corrida, p.tituloCorrida);
            // Atualiza a tabela na tela-
            Controlador_TelaCorrida.atualizarTelaCorrida(p.jTable1, p.c);

            TimeUnit.SECONDS.sleep(Delays.TROCA_CORRIDA.getV());

            for (Equipe e : p.c.getEquipes()) {
                Carro carro = e.getCarro();
                carro.setEstado(Carro.Estados.CORRENDO);
                carro.mover();
            }
            float distancia_pista = corrida.getDistancia_pista();
            
            // LOOP GERAL DE MOVIMENTAÇÃO DA CORRIDA
            while (!corrida_terminou) {
                corrida_terminou = true;
                //Representa cada instante da corrida
                for (Equipe e : p.c.getEquipes()) {
                    Carro carro = e.getCarro();
                    if(carro.getEstado() != Carro.Estados.CORRIDA_FINALIZADA){
                        corrida_terminou = false;
                        carro.setEstado(Carro.Estados.CORRENDO);
                        if (carro.getDistancia() > distancia_pista) { // Carro terminou a corrida
                            if (carro.getVolta() == corrida.getNumero_voltas()) {
                                carro.setEstado(Carro.Estados.CORRIDA_FINALIZADA);
                            } else { // Correndo normal
                                carro.incrementeVoltas();
                                carro.setDistancia(carro.getDistancia() - distancia_pista);
                            }
                        }
                        carro.mover();
                        carro.decrementaCombustivel();
                        //VERIFICAR PNEU FUROU
                        //VERIFICAR TROCAR PNEU
                    }
                }
                
                //AQUI ROLAM TODAS AS PARADA INSANAS
                //VERIFICAR MUDANCA DE CLIMA
                //VERICIAR ACIDENTE
                
                TimeUnit.MILLISECONDS.sleep(5 * Delays.TEMPO_CORRER.getV());
                // Atualiza a tabela na tela-
                Controlador_TelaCorrida.atualizarTelaCorrida(p.jTable1, p.c);
            }
//            TimeUnit.SECONDS.sleep(8 + Delays.TROCA_CORRIDA.getV());

            //Corrida terminou, voltar todos os carros pro estado de esperando largada
            for (Equipe e : p.c.getEquipes()) {
                Carro carro = e.getCarro();
                carro.setEstado(Carro.Estados.AGUARDANDO_LARGADA);
                carro.setDistancia(0);
            }
            TimeUnit.SECONDS.sleep(20);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel tituloCorrida;
    // End of variables declaration//GEN-END:variables
}
